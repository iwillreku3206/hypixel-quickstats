/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/players/{playerName}': {
		/** Returns player stats of one or up to 16 players. Multiple `playerName`s must be separated by a comma. */
		get: operations['getPlayer']
	}
	'/players/{playerName}/achievements': {
		/** Returns player achievement stats */
		get: operations['getPlayerAchievements']
	}
	'/players/{playerName}/quests': {
		/** Returns player quest completions */
		get: operations['getPlayerQuests']
	}
	'/players/{playerName}/recentGames': {
		/** Returns up to 100 most recent games played by player. Games are stored for 3 days and may be hidden by the player. */
		get: operations['getPlayerRecentGames']
	}
	'/players/{playerName}/status': {
		/** Returns the current online status and game for a player. */
		get: operations['getPlayerStatus']
	}
	'/guilds/{playerName}': {
		/** Look up a guild from the name of one of it's members */
		get: operations['getGuildFromPlayer']
	}
	'/guilds/name/{guildName}': {
		/** Look up a guild from the its name */
		get: operations['getGuildFromName']
	}
	'/guilds/id/{guildID}': {
		/** Look up a guild from the its ID */
		get: operations['guild']
	}
	'/skyblock/profiles/{playerName}': {
		/** Gets all skyblock profiles for the specified player */
		get: operations['getSkyblockProfiles']
	}
	'/skyblock/profile/{playerName}/{profileId}': {
		/** If no profile is specified, the last played profile is returned */
		get: operations['getSkyblockPlayerProfile']
	}
	'/skyblock/auctions': {
		/** Allows you to query active auctions and filter the results based on things such as item ID, rarity, bin or category. */
		get: operations['getSkyblockAuctions']
	}
	'/skyblock/items': {
		/** Returns all SkyBlock items */
		get: operations['getSkyblockItems']
	}
	'/skyblock/bazaar/{itemId}': {
		/** Get bazaar data for an item by ID, or for all items. You can see which items are available in the bazaar via the `/skyblock/items` endpoint. If none is specified returns all items. */
		get: {
			parameters: {
				path: {
					/** Item id, e.g. HOT_POTATO_BOOK. All available item ids can be found on the [items endpoint](https://api.slothpixel.me/api/skyblock/items). Multiple can be specified by seperating them with commas. To get all the items, don't specify itemId. */
					itemId?: string
				}
			}
			responses: {
				/** successful operation */
				200: {
					content: {
						'application/json': {
							name?: string
							category?: string
							related?: string[]
							quick_status?: {
								buyPrice?: number
								buyVolume?: number
								buyMovingWeek?: number
								buyOrders?: number
								sellPrice?: number
								sellVolume?: number
								sellMovingWeek?: number
								sellOrders?: number
							}
							buy_summary?: {
								amount?: number
								pricePerUnit?: number
								orders?: number
							}[]
							sell_summary?: {
								amount?: number
								pricePerUnit?: number
								orders?: number
							}[]
						}[]
					}
				}
			}
		}
	}
	'/skyblock/events': {
		/** Returns SkyBlock events. Use key for the events parameter in /calendar/events endpoint */
		get: operations['getSkyblockEvents']
	}
	'/skyblock/calendar': {
		/** Returns information about the SkyBlock calendar */
		get: operations['getSkyblockCalendar']
	}
	'/boosters': {
		/** Returns a list of boosters for all server gamemodes */
		get: operations['getBoosters']
	}
	'/boosters/{game}': {
		/** Returns a list of active boosters for the specified game */
		get: {
			parameters: {
				path: {
					/** [Standard](https://github.com/slothpixel/core/wiki/Standard-naming) minigame name */
					game: string
				}
			}
			responses: {
				/** successful operation */
				200: {
					content: {
						'application/json': {
							/** @description UUID of booster owner */
							uuid?: string
							/** @description Booster coin multiplier */
							multiplier?: number
							/** @description UNIX timestamp of activation date */
							activated?: number
							/** @description Original duration in seconds */
							originalLength?: number
							/** @description Current length in seconds */
							length?: number
							/** @description Whether the booster is currently active */
							active?: boolean
							/** @description Array of players that have stacked a booster on the same slot */
							stacked?: string[]
						}[]
					}
				}
			}
		}
	}
	'/bans': {
		/** Returns information about the number of staff and watchdog server bans */
		get: operations['getBans']
	}
	'/counts': {
		/** Returns information about player counts in each game */
		get: operations['getCounts']
	}
	'/constants/{resource}': {
		/** Get static game data mirrored from the hypixelconstants repository. If no resource is specified, returns an array of available resources. */
		get: {
			parameters: {
				path: {
					/** Resource name e.g. `languages`. [List of resources](https://github.com/slothpixel/hypixelconstants/tree/master/build) */
					resource?: unknown
				}
			}
		}
	}
}

export interface components {}

export interface operations {
	/** Returns player stats of one or up to 16 players. Multiple `playerName`s must be separated by a comma. */
	getPlayer: {
		parameters: {
			path: {
				/** Username or non-dashed UUID of player. UUID should be used when feasible for better performance. */
				playerName: string
			}
			query: {
				/** @deprecated A comma separated list of fields to include alongside basic stats. */
				fields?: string
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						/** @description Player uuid */
						uuid?: string
						/** @description Player username */
						username?: string
						/** @description Is player online */
						online?: boolean
						/** @description Player rank */
						rank?: string
						/** @description Color code for MVP+(+) */
						rank_plus_color?: string
						/** @description Formatted rank string */
						rank_formatted?: string
						/** @description Custom rank prefix */
						prefix?: string
						/** @description Player karma */
						karma?: number
						/** @description Current Hypixel Experience */
						exp?: number
						/** @description Player level with precision of two decimals */
						level?: number
						/** @description Total achievement points */
						achievement_points?: number
						/** @description Total quests completed */
						quests_completed?: number
						/** @description Total kills across all minigames */
						total_kills?: number
						/** @description Total wins across all minigames */
						total_wins?: number
						/** @description Total coins across all minigames */
						total_coins?: number
						/** @description Total games played across all minigames */
						total_games_played?: number
						/** @description Minecraft version the user last logged on Hypixel with */
						mc_version?: string
						/** @description Date of first Hypixel login */
						first_login?: number
						/** @description Date of latest Hypixel login */
						last_login?: number
						/** @description Date of latest Hypixel logout */
						last_logout?: number
						/** @description Latest minigame played */
						last_game?: string
						/** @description Currently selected language */
						language?: string
						/** @description Total gifts sent to other players */
						gifts_sent?: number
						/** @description Total gifts received from other players */
						gifts_received?: number
						/** @description Total ranks sent to other players */
						ranks_sent?: number
						/** @description Whether player is a contributor to Slothpixel */
						is_contributor?: boolean
						/** @description Daily reward data */
						rewards?: {
							/** @description Current streak */
							streak_current?: number
							/** @description Best streak */
							streak_best?: number
							/** @description Total rewards claimed */
							claimed?: number
							/** @description Daily rewards claimed */
							claimed_daily?: number
							/** @description Current reward tokens */
							tokens?: number
						}
						/** @description Player voting data */
						voting?: {
							/** @description Votes in the last day */
							votes_today?: number
							/** @description Total lifetime votes */
							total_votes?: number
							/** @description Date of latest vote */
							last_vote?: number
						}
						/** @description Social media links */
						links?: {
							/** @description Link to Twitter profile */
							TWITTER?: string
							/** @description Link to YouTube channel */
							YOUTUBE?: string
							/** @description Link to Instagram profile */
							INSTAGRAM?: string
							/** @description Link to Twitch channel */
							TWITCH?: string
							/** @description Discord handle, in full format of username#discriminator */
							DISCORD?: string
							/** @description Link to Hypixel Forums profile */
							HYPIXEL?: string
							/** @description Link to TikTok profile */
							TIKTOK?: string
						}
						/** @description Player stats across all minigames */
						stats?: {
							/** @description Player stats in the Arcade Games */
							Arcade?: {
								/** @description Current coins in the Arcade Games */
								coins?: number
								/** @description Stats about Blocking Dead */
								blocking_dead?: {
									/** @description Amount of wins in Blocking Dead */
									wins?: number
									/** @description Amount of zombie kills in Blocking Dead */
									zombie_kills?: number
									/** @description Amount of headshots in Blocking Dead */
									headshots?: number
								}
								/** @description Stats about Dragon Wars */
								dragonwars?: {
									/** @description Amount of wins in Dragon Wars */
									wins?: number
									/** @description Amount of kills in Dragon Wars */
									kills?: number
								}
								/** @description Stats about Hypixel Says */
								hypixel_says?: {
									/** @description Amount of wins in Hypixel Says */
									wins?: number
									/** @description Amount of rounds played in Hypixel Says */
									rounds?: number
								}
								/** @description Stats about Santa Says */
								santa_says?: {
									/** @description Amount of wins in Santa Says */
									wins?: number
									/** @description Amount of rounds played in Santa Says */
									rounds?: number
								}
								/** @description Stats about Mini Walls */
								miniwalls?: {
									/** @description Amount of wins in Mini Walls */
									wins?: number
									/** @description Amount of kills in Mini Walls */
									kills?: number
									/** @description Amount of deaths in Mini Walls */
									deaths?: number
									/** @description Amount of final kills in Mini Walls */
									final_kills?: number
									/** @description The Amount of arrows shot in Mini Walls */
									arrows_shot?: number
									/** @description Amount of arrows that hit their targets in Mini Walls */
									arrows_hit?: number
									/** @description Amount of wither damage taken in Mini Walls */
									wither_damage?: number
									/** @description Amount of withers killed in Mini Walls */
									wither_kills?: number
									/** @description Active kit */
									kit?: string
								}
								/** @description Stats about Party Games */
								party_games?: {
									/** @description Amount of wins in Party Games */
									wins_1?: number
									/** @description Amount of wins in Party Games */
									wins_2?: number
									/** @description Amount of wins in Party Games */
									wins_3?: number
								}
								/** @description Stats about Bounty Hunters */
								bounty_hunters?: {
									/** @description Amount of wins in Bounty Hunters */
									wins?: number
									/** @description Amount of kills in Bounty Hunters */
									kills?: number
									/** @description Amount of deaths in Bounty Hunters */
									deaths?: number
									/** @description Amount of bounty kills in Bounty Hunters */
									bounty_kills?: number
								}
								/** @description Stats about Galaxy Wars */
								galaxy_wars?: {
									/** @description Amount of wins in Galaxy Wars */
									wins?: number
									/** @description Amount of kills in Galaxy Wars */
									kills?: number
									/** @description Amount of deaths in Galaxy Wars */
									deaths?: number
									/** @description Amount of rebel kills in Galaxy Wars */
									rebel_kills?: number
									/** @description The Amount of shots fired in Galaxy Wars */
									shots_fired?: number
								}
								/** @description Stats about Farm Hunt */
								farm_hunt?: {
									/** @description Amount of wins in Farm Hunt */
									wins?: number
									/** @description Amount of poop collected in Farm Hunt */
									poop_collected?: number
								}
								/** @description Stats about Football */
								football?: {
									/** @description Amount of wins in Football */
									wins?: number
									/** @description Amount of goals scored in Football */
									goals?: number
									/** @description Amount of powerkicks in Football */
									powerkicks?: number
								}
								/** @description Stats about Creeper Attack */
								creeper_attack?: {
									/** @description Best wave in Football */
									best_wave?: number
								}
								/** @description Stats about Hole in the Wall */
								hole_in_the_wall?: {
									/** @description Amount of wins in Hole in the Wall */
									wins?: number
									/** @description Amount of rounds played in Hole in the Wall */
									rounds?: number
									/** @description Highest score qualification in Hole in the Wall */
									highest_score_qualification?: number
									/** @description Highest score in finals in Hole in the Wall */
									highest_score_finals?: number
								}
								/** @description Stats about Zombies */
								zombies?: {
									/** @description Amount of wins in Zombies */
									wins?: number
									/** @description Amount of zombie kills in Zombies */
									zombie_kills?: number
									/** @description Amount of deaths in Zombies */
									deaths?: number
									/** @description Total rounds survived in Zombies */
									total_rounds_survived?: number
									/** @description Amount of bullets hit in Zombies */
									bullets_hit?: number
									/** @description Amount of headshots in Zombies */
									headshots?: number
									/** @description Amount of players revived in Zombies */
									players_revived?: number
									/** @description Amount of windows repaired in Zombies */
									windows_repaired?: number
									/** @description Amount of doors opened in Zombies */
									doors_opened?: number
									/** @description Best round in Zombies */
									best_round?: number
								}
							}
							/** @description Player stats in Arena Brawl */
							Arena?: {
								/** @description Current coins */
								coins?: number
								/** @description Total coins spent in Arena Brawl */
								coins_spent?: number
								/** @description Currently selected hat cosmetic */
								hat?: string
								penalty?: number
								magical_chest?: number
								/** @description Current Amount of Magical Chest keys */
								keys?: number
								/** @description Currently selected Sword cosmetic */
								selected_sword?: string
								active_rune?: string
								/** @description Currently selected skills */
								skills?: {
									/** @description Currently selected Offensive skill */
									offensive?: string
									/** @description Currently selected Support skill */
									support?: string
									/** @description Currently selected Utility skill */
									utility?: string
									/** @description Currently selected Ultimate skill */
									ultimate?: string
								}
								/** @description Current Combat Upgrades in Arena Brawl */
								combat_levels?: {
									/** @description Current Melee Upgrade progression */
									melee?: number
									/** @description Current Health Upgrade progression */
									health?: number
									/** @description Current Energy Upgrade progression */
									energy?: number
									/** @description Current Cooldown Upgrade progression */
									cooldown?: number
								}
								/** @description Current rune upgrades in Arena Brawl */
								rune_levels?: {
									/** @description Rune of Damage upgrade progression */
									damage?: number
									/** @description Rune of Energy upgrade progression */
									energy?: number
									/** @description Rune of Slowing upgrade progression */
									slowing?: number
									/** @description Rune of Speed upgrade progression */
									speed?: number
								}
								/** @description Stats in specific Arena gamemodes */
								gamemodes?: {
									/** @description Specific stats in 1v1 Arena */
									one_v_one?: {
										/** @description Total damage dealt in 1v1 Arena */
										damage?: number
										/** @description Total kills in 1v1 Arena */
										kills?: number
										/** @description Total deaths in 1v1 Arena */
										deaths?: number
										/** @description Total losses in 1v1 Arena */
										losses?: number
										/** @description Total wins in 1v1 Arena */
										wins?: number
										/** @description Highest win streak in 1v1 Arena */
										win_streaks?: number
										/** @description Total games played in 1v1 Arena */
										games?: number
										/** @description Total health healed in 1v1 Arena */
										healed?: number
										/** @description Kill/death ratio in 1v1 Arena */
										kd?: number
										/** @description Win/loss ratio in 1v1 Arena */
										win_loss?: number
										/** @description Win percentage out of games played in 1v1 Arena */
										win_percentage?: number
									}
									/** @description Specific stats in 2v2 Arena */
									two_v_two?: {
										/** @description Total damage dealt in 2v2 Arena */
										damage?: number
										/** @description Total kills in 2v2 Arena */
										kills?: number
										/** @description Total deaths in 2v2 Arena */
										deaths?: number
										/** @description Total losses in 2v2 Arena */
										losses?: number
										/** @description Total wins in 2v2 Arena */
										wins?: number
										/** @description Highest win streak in 2v2 Arena */
										win_streaks?: number
										/** @description Total games played in 2v2 Arena */
										games?: number
										/** @description Total health healed in 2v2 Arena */
										healed?: number
										/** @description Kill/death ratio in 2v2 Arena */
										kd?: number
										/** @description Win/loss ratio in 2v2 Arena */
										win_loss?: number
										/** @description Win percentage out of games played in 2v2 Arena */
										win_percentage?: number
									}
									/** @description Specific stats in 4v4 Arena */
									four_v_four?: {
										/** @description Total damage dealt in 4v4 Arena */
										damage?: number
										/** @description Total kills in 4v4 Arena */
										kills?: number
										/** @description Total deaths in 4v4 Arena */
										deaths?: number
										/** @description Total losses in 4v4 Arena */
										losses?: number
										/** @description Total wins in 4v4 Arena */
										wins?: number
										/** @description Highest win streak in 4v4 Arena */
										win_streaks?: number
										/** @description Total games played in 4v4 Arena */
										games?: number
										/** @description Total health healed in 4v4 Arena */
										healed?: number
										/** @description Kill/death ratio in 4v4 Arena */
										kd?: number
										/** @description Win/loss ratio in 4v4 Arena */
										win_loss?: number
										/** @description Win percentage out of games played in 4v4 Arena */
										win_percentage?: number
									}
								}
							}
							/** @description Player stats in Warlords */
							Warlords?: {
								/** @description Current coins in Warlords */
								coins?: number
								/** @description Current kills in Warlords */
								kills?: number
								/** @description Current assists in Warlords */
								assists?: number
								/** @description Current deaths in Warlords */
								deaths?: number
								/** @description The players current kill/death in Warlords */
								kill_death_ratio?: number
								/** @description Current wins in Warlords */
								wins?: number
								/** @description Current Capture the Flag wins in Warlords */
								wins_capturetheflag?: number
								/** @description Current Domination wins in Warlords */
								wins_domination?: number
								/** @description Current Team Deathmatch wins in Warlords */
								wins_teamdeathmatch?: number
								/** @description Current number of weapons repaired in Warlords */
								weapons_repaired?: number
								/** @description Current number of flags captured in Warlords */
								flags_captured?: number
								/** @description Current number of flags returned in Warlords */
								flags_returned?: number
							}
							/** @description Player stats in Bedwars */
							BedWars?: {
								/** @description Current coins in Bedwars */
								coins?: number
								/** @description Total exp */
								exp?: number
								/** @description EXP level */
								level?: number
								/** @description Total exp */
								wins?: number
								/** @description Total exp */
								losses?: number
								/** @description Total exp */
								games_played?: number
								/** @description Total exp */
								kills?: number
								/** @description Total Amount of deaths */
								deaths?: number
								/** @description K/D ratio */
								k_d?: number
								/** @description W/L ratio */
								w_l?: number
								/** @description Total Amount of beds broken */
								beds_broken?: number
								/** @description Total Amount of beds lost */
								beds_lost?: number
								/** @description Ratio of beds broken to beds lost */
								bed_ratio?: number
								/** @description Total Amount of final kills */
								final_kills?: number
								/** @description Total Amount of final deaths */
								final_deaths?: number
								/** @description Total Amount of final deaths */
								final_k_d?: number
								/** @description Total Amount of final deaths */
								void_kills?: number
								/** @description Total Amount of final deaths */
								void_deaths?: number
								/** @description Amount of times you've gone without losing */
								winstreak?: number
								/** @description Stats for boxes in BedWars */
								boxes?: {
									/** @description Current amount of boxes */
									current?: number
									/** @description Amount of boxes opened */
									opened?: number
									/** @description Amount of commons earned from boxes */
									commons?: number
									/** @description Amount of rares earned from boxes */
									rares?: number
									/** @description Amount of epics earned from boxes */
									epics?: number
									/** @description Amount of legendaries earned from boxes */
									legendaries?: number
								}
								/** @description Stats for the resources collected in BedWars */
								resources_collected?: {
									/** @description Total Amount of iron collected from generators */
									iron?: number
									/** @description Total Amount of gold collected from generators */
									gold?: number
									/** @description Total Amount of diamonds collected from generators */
									diamond?: number
									/** @description Total Amount of emeralds collected from generators */
									emerald?: number
								}
								/** @description Stats for the different gamemodes in BedWars */
								gamemodes?: { [key: string]: unknown }
								/** @description Stats for the Bed Wars Practice mode */
								practice?: {
									/** @description Selected Practice mode at the NPC */
									selected?: string
									/** @description Statistics for the Bridging Practice mode */
									bridging?: { [key: string]: unknown }
									/** @description Bed Wars Practice records */
									records?: { [key: string]: unknown }
									/** @description Statistics for the MLG Practice mode */
									mlg?: { [key: string]: unknown }
									/** @description Statistics for the Fireball and TNT Jumping Practice mode */
									fireball_jumping?: { [key: string]: unknown }
								}
							}
							/** @description Player stats in Build Battle */
							BuildBattle?: {
								/** @description Current coins in Build Battle */
								coins?: number
								/** @description Current score in Build Battle */
								score?: number
								/** @description Wins in all Build Battle modes */
								wins?: number
								/** @description Win Ratio */
								w_r?: number
								/** @description Judging votes on other builds */
								total_votes?: number
								/** @description Wins in Solo Mode */
								wins_solo_normal?: number
								/** @description Wins in Pro Mode */
								wins_solo_pro?: number
								/** @description Wins in Teams Mode */
								wins_teams_normal?: number
								/** @description Wins in Guess The Build */
								wins_guess_the_build?: number
								/** @description Correct guesses in Guess The Build */
								correct_guesses?: number
								/** @description Post-Update games played in all modes */
								games_played?: number
								/** @description Super Votes the player currently has */
								super_votes?: number
								/** @description Custom Hotbar loadout */
								loadout?: string[]
								/** @description Currently selected hat cosmetic */
								selected_hat?: string
								/** @description Currently selected victory dance cosmetic */
								selected_victory_dance?: string
								/** @description Currently selected suit cosmetic */
								selected_suit?: string
								/** @description Currently selected movement trail cosmetic */
								selected_movement_trail?: string
								/** @description Currently selected backdrop cosmetic */
								selected_backdrop?: string
								/** @description Key-Value pairs of 1-5 star ratings on themes */
								themeRatings?: { [key: string]: unknown }
							}
							/** @description Player stats in Duels */
							Duels?: {
								/** @description Current coins in Duels */
								coins?: number
								/** @description Total wins in Duels */
								wins?: number
								/** @description Total losses in Duels */
								losses?: number
								/** @description Total kills in Duels */
								kills?: number
								/** @description Total deaths in Duels */
								deaths?: number
								/** @description Ratio of kills to deaths */
								kd_ratio?: number
								/** @description Ratio of wins to losses */
								win_loss_ratio?: number
							}
							/** @description Current stats in Turbo Kart Racers */
							TKR?: {
								/** @description Current coins in Turbo Kart Racers */
								coins?: number
								/** @description Total coins picked up in Turbo Kart Racers */
								coin_pickups?: number
								/** @description Total laps completed in Turbo Kart Racers */
								laps?: number
								/** @description Total wins in Turbo Kart Racers */
								wins?: number
								/** @description Total powerups collected in Turbo Kart Racers */
								box_pickups?: number
								/** @description Total successful hits by your bananas in Turbo Kart Racers */
								bananas_sent?: number
								/** @description Total bananas slipped on in Turbo Kart Racers */
								bananas_received?: number
								/** @description Ratio of banana hits to bananas slipped on */
								banana_ratio?: number
								/** @description Stats for trophies won in Turbo Kart Racers */
								trophies?: {
									/** @description Total gold trophies (first place) won in Turbo Kart Racers */
									gold?: number
									/** @description Total silver trophies (second place) won in Turbo Kart Racers */
									silver?: number
									/** @description Total bronze trophies (third place) won in Turbo Kart Racers */
									bronze?: number
								}
								/** @description Player stats on specific maps in Turbo Kart Racers */
								maps?: {
									/** @description Player stats on the Retro map in Turbo Kart Racers */
									retro?: {
										/** @description Total games played on Retro */
										games?: number
										/** @description Ratio of wins to games played on Retro */
										win_ratio?: number
										/** @description Trophies won on Retro */
										trophies?: {
											/** @description Gold trophies won on Retro */
											gold?: number
											/** @description Silver trophies won on Retro */
											silver?: number
											/** @description Bronze trophies won on Retro */
											bronze?: number
										}
									}
									/** @description Player stats on the Hypixel GP map in Turbo Kart Racers */
									hypixelgp?: {
										/** @description Total games played on Hypixel GP */
										games?: number
										/** @description Ratio of wins to games played on Hypixel GP */
										win_ratio?: number
										/** @description Trophies won on Hypixel GP */
										trophies?: {
											/** @description Gold trophies won on Hypixel GP */
											gold?: number
											/** @description Silver trophies won on Hypixel GP */
											silver?: number
											/** @description Bronze trophies won on Hypixel GP */
											bronze?: number
										}
									}
									/** @description Player stats on the Jungle Rush map in Turbo Kart Racers */
									junglerush?: {
										/** @description Total games played on Jungle Rush */
										games?: number
										/** @description Ratio of wins to games played on Jungle Rush */
										win_ratio?: number
										/** @description Trophies won on Jungle Rush */
										trophies?: {
											/** @description Gold trophies won on Jungle Rush */
											gold?: number
											/** @description Silver trophies won on Jungle Rush */
											silver?: number
											/** @description Bronze trophies won on Jungle Rush */
											bronze?: number
										}
									}
									/** @description Player stats on the Olympus map in Turbo Kart Racers */
									olympus?: {
										/** @description Total games played on Olympus */
										games?: number
										/** @description Ratio of wins to games played on Olympus */
										win_ratio?: number
										/** @description Trophies won on Olympus */
										trophies?: {
											/** @description Gold trophies won on Olympus */
											gold?: number
											/** @description Silver trophies won on Olympus */
											silver?: number
											/** @description Bronze trophies won on Olympus */
											bronze?: number
										}
									}
									/** @description Player stats on the Canyon map in Turbo Kart Racers */
									canyon?: {
										/** @description Total games played on Canyon */
										games?: number
										/** @description Ratio of wins to games played on Canyon */
										win_ratio?: number
										/** @description Trophies won on Canyon */
										trophies?: {
											/** @description Gold trophies won on Canyon */
											gold?: number
											/** @description Silver trophies won on Canyon */
											silver?: number
											/** @description Bronze trophies won on Canyon */
											bronze?: number
										}
									}
								}
							}
							/** @description Player stats in Blitz Survival Games */
							Blitz?: {
								/** @description Current coins in Blitz Survival Games */
								coins?: number
								/** @description Total deaths in Blitz Survival Games */
								deaths?: number
								/** @description Total kills in Blitz Survival Games */
								kills?: number
								/** @description Ratio of kills to deaths in Blitz Survival Games */
								k_d?: number
								/** @description Total wins in Solo Blitz Survival Games */
								wins?: number
								/** @description Total wins in Teams Blitz Survival Games */
								team_wins?: number
								/** @description Ratio of total wins to losses in Blitz Survival Games */
								win_loss?: number
								/** @description Percentage of games won out of total games played in Blitz Survival Games */
								win_percentage?: number
								/** @description Current weekly kills in Blitz Survival Games */
								weekly_kills?: number
								/** @description Current monthly kills in Blitz Survival Games */
								monthly_kills?: number
								/** @description Total games won with the Rambo kit in Blitz Survival Games */
								rambo_wins?: number
								/** @description Total games won with a random kit in Blitz Survival Games */
								random_wins?: number
								/** @description Total damage taken in Blitz Survival Games */
								damage_taken?: number
								/** @description Total players killed while using a taunt in Blitz Survival Games */
								taunt_kills?: number
								/** @description Total potions drunk in Blitz Survival Games */
								potions_drunk?: number
								/** @description Total damage dealt in Blitz Survival Games */
								damage?: number
								/** @description Total mobs spawned by the player in Blitz Survival Games */
								mobs_spawned?: number
								/** @description Total playtime in Blitz Survival Games */
								time_played?: number
								/** @description Successful arrow shots landed in Blitz Survival Games */
								arrows_hit?: number
								/** @description Total games of Blitz Survival Games played */
								games_played?: number
								/** @description Total splash potions thrown in Blitz Survival Games */
								potions_thrown?: number
								/** @description Total arrows shot in blitz survival games */
								arrows_fired?: number
								/** @description Total Amount of Blitz Stars used in Blitz Survival Games */
								blitz_uses?: number
								/** @description Total Amount of chests opened in Blitz Survival Games */
								chests_opened?: number
								/** @description Player's current kit levels in Blitz Survival Games */
								kits_levels?: { [key: string]: unknown }
								/** @description Specific stats with a kit in Blitz Survival Games */
								kit_stats?: { [key: string]: unknown }
								/** @description Player's current cosmetics equipped in Blitz Survival Games */
								equipped?: {
									/** @description Currently equipped aura cosmetic */
									aura?: string
									/** @description Currently equipped taunt effect */
									taunt?: string
									/** @description Currently equipped victory dance effect */
									victory_dance?: string
									/** @description Currently equipped finisher effect */
									finisher?: string
								}
								/** @description Current settings in Blitz Survival Games */
								settings?: {
									/** @description Current kit selected as default in Blitz Survival Games */
									default_kit?: string
									/** @description Is auto armor enabled */
									auto_armor?: boolean
								}
								/** @description Currently configured kit inventories */
								inventories?: { [key: string]: unknown }
							}
							/** @description Player stats in Cops vs Crims */
							CvC?: {
								/** @description Current coins in Cops vs Crims */
								coins?: number
								/** @description Total deaths in Cops vs Crims */
								deaths?: number
								/** @description Total kills in Cops vs Crims */
								kills?: number
								/** @description Current kill/death ratio in Cops vs Crims */
								kd?: number
								/** @description Total wins in Cops vs Crims */
								wins?: number
								/** @description Total cops killed */
								cop_kills?: number
								/** @description Total criminals killed */
								criminal_kills?: number
								/** @description Current weekly kills */
								weekly_kills?: number
								/** @description Current monthly kills */
								monthly_kills?: number
								/** @description Total bombs planted as Criminal */
								bombs_planted?: number
								/** @description Total bombs defused as Cop */
								bombs_defused?: number
								/** @description Total kills with a grenade */
								grenade_kills?: number
								/** @description Total headshot kills */
								headshot_kills?: number
								/** @description Total individual round wins */
								round_wins?: number
								/** @description Currently selected nametag prefix in the Cops vs Crims lobby */
								selected_lobby_prefix?: string
								/** @description Total shots fired */
								shots_fired?: number
								/** @description Whether the lobby nametag prefix is currently enabled */
								show_lobby_prefix?: boolean
								/** @description Current wins on specific maps */
								map_wins?: {
									/** @description Current wins on the Alleyway map */
									alleyway?: number
									/** @description Current wins on the Atomic map */
									atomic?: number
									/** @description Current wins on the Carrier map */
									carrier?: number
									/** @description Current wins on the Melon Factory map */
									melon_factory?: number
									/** @description Current wins on the Overgrown map */
									overgrown?: number
									/** @description Current wins on the Reserve map */
									reserve?: number
									/** @description Current wins on the Sandstorm map */
									sandstorm?: number
									/** @description Current wins on the Temple map */
									temple?: number
								}
								/** @description Current player stats in CvC Deathmatch */
								deathmatch?: {
									/** @description Total kills in CvC Deathmatch */
									kills?: number
									/** @description Total deaths in CvC Deathmatch */
									deaths?: number
									/** @description Current kill/death ratio in CvC Deathmatch */
									kd?: number
									/** @description Total wins in CvC Deathmatch */
									wins?: number
									/** @description Total cops killed in CvC Deathmatch */
									cop_kills?: number
									/** @description Total criminals killed in CvC Deathmatch */
									criminal_kills?: number
								}
								/** @description Currently purchased perks and upgrades for Cops vs Crims */
								perks?: {
									/** @description Character upgrades */
									player?: {
										/** @description Current progression of Body Armor Cost upgrade */
										body_armor_cost?: number
										/** @description Current progression of Bounty Hunter upgrade */
										bounty_hunter?: number
										/** @description Current progression of Pocket Change upgrade */
										pocket_change?: number
										/** @description Current progression of Strength Training upgrade */
										strength_training?: number
									}
									/** @description Carbine Specialization upgrades */
									carbine?: {
										/** @description Current progression of the Carbine's Cost Reduction upgrade */
										cost_reduction?: number
										/** @description Current progression of the Carbine's Damage Increase upgrade */
										damage_increase?: number
										/** @description Current progression of the Carbine's Recoil Reduction upgrade */
										recoil_reduction?: number
										/** @description Current progression of the Carbine's Reload Speed Reduction upgrade */
										reload_speed_reduction?: number
									}
									/** @description Knife Specialization upgrades */
									knife?: {
										/** @description Current progression of the Knife's Attack Delay upgrade */
										attack_delay?: number
										/** @description Current progression of the Knife's Damage Increase upgrade */
										damage_increase?: number
									}
									/** @description Magnum Specialization upgrades */
									magnum?: {
										/** @description Current progression of the Magnum's Cost Reduction upgrade */
										cost_reduction?: number
										/** @description Current progression of the Magnum's Damage Increase upgrade */
										damage_increase?: number
										/** @description Current progression of the Magnum's Recoil Reduction upgrade */
										recoil_reduction?: number
										/** @description Current progression of the Magnum's Reload Speed Reduction upgrade */
										reload_speed_reduction?: number
									}
									/** @description Pistol Specialization upgrades */
									pistol?: {
										/** @description Current progression of the Pistol's Damage Increase upgrade */
										damage_increase?: number
										/** @description Current progression of the Pistol's Recoil Reduction upgrade */
										recoil_reduction?: number
										/** @description Current progression of the Pistol's Reload Speed Reduction upgrade */
										reload_speed_reduction?: number
									}
									/** @description Rifle Specialization upgrades */
									rifle?: {
										/** @description Current progression of the Rifle's Cost Reduction upgrade */
										cost_reduction?: number
										/** @description Current progression of the Rifle's Damage Increase upgrade */
										damage_increase?: number
										/** @description Current progression of the Rifle's Recoil Reduction upgrade */
										recoil_reduction?: number
										/** @description Current progression of the Rifle's Reload Speed Reduction upgrade */
										reload_speed_reduction?: number
									}
									/** @description Shotgun Specialization upgrades */
									shotgun?: {
										/** @description Current progression of the Shotgun's Cost Reduction upgrade */
										cost_reduction?: number
										/** @description Current progression of the Shotgun's Damage Increase upgrade */
										damage_increase?: number
										/** @description Current progression of the Shotgun's Recoil Reduction upgrade */
										recoil_reduction?: number
										/** @description Current progression of the Shotgun's Reload Speed Reduction upgrade */
										reload_speed_reduction?: number
									}
									/** @description SMG Specialization upgrades */
									smg?: {
										/** @description Current progression of the SMG's Cost Reduction upgrade */
										cost_reduction?: number
										/** @description Current progression of the SMG's Damage Increase upgrade */
										damage_increase?: number
										/** @description Current progression of the SMG's Recoil Reduction upgrade */
										recoil_reduction?: number
										/** @description Current progression of the SMG's Reload Speed Reduction upgrade */
										reload_speed_reduction?: number
									}
									/** @description Sniper Specialization upgrades */
									sniper?: {
										/** @description Current progression of the Sniper's Target Acquire upgrade */
										charge_bonus?: number
										/** @description Current progression of the Sniper's Cost Reduction upgrade */
										cost_reduction?: number
										/** @description Current progression of the Sniper's Damage Increase upgrade */
										damage_increase?: number
										/** @description Current progression of the Sniper's Reload Speed Reduction upgrade */
										reload_speed_reduction?: number
									}
								}
								/** @description Currently selected cosmetic appearance for each weapon type */
								selected_cosmetics?: {
									/** @description Currently selected Carbine cosmetic */
									carbine?: string
									/** @description Currently selected Knife cosmetic */
									knife?: string
									/** @description Currently selected Magnum cosmetic */
									magnum?: string
									/** @description Currently selected Pistol cosmetic */
									pistol?: string
									/** @description Currently selected Rifle cosmetic */
									rifle?: string
									/** @description Currently selected Shotgun cosmetic */
									shotgun?: string
									/** @description Currently selected SMG cosmetic */
									smg?: string
								}
							}
							/** @description Player stats in Murder Mystery */
							MurderMystery?: {
								/** @description Current coins in Murder Mystery */
								coins?: number
								/** @description Current wins in Murder Mystery */
								wins?: number
								/** @description Current games played in Murder Mystery */
								games_played?: number
								/** @description Current win/loss ratio in Murder Mystery. Dying as innocent, murderer, or detective (or in assassins) counts as a loss. */
								win_loss_ratio?: number
								/** @description Current kills in Murder Mystery */
								kills?: number
								/** @description Current deaths in Murder Mystery */
								deaths?: number
								/** @description Current kill/death ratio in Murder Mystery */
								kill_death_ratio?: number
								/** @description Number of times the player was the hero (killed the murderer without being detective) in Murder Mystery */
								times_hero?: number
								/** @description Stats for loot crates in Murder Mystery */
								boxes?: {
									/** @description Current amount of loot crates */
									current?: number
									/** @description Amount of loot crates opened */
									opened?: number
									/** @description Amount of commons earned from loot crates */
									commons?: number
									/** @description Amount of rares earned from loot crates */
									rares?: number
									/** @description Amount of epics earned from loot crates */
									epics?: number
									/** @description Amount of legendaries earned from loot crates */
									legendaries?: number
								}
							}
							/** @description Player stats in The Pit */
							Pit?: {
								/** @description All player data like inventory */
								profile?: {
									outgoing_offers?: unknown[]
									contract_choices?: unknown[]
									/** @description Unix timestamp when their stats were last saved */
									last_save?: number
									/** @description Decimal representation of their hat color */
									hat_color?: number
									/** @description Aray of Unix timestamps of their recent trades */
									trade_timestamps?: number[]
									impatient_enabled?: boolean
									/** @description Enderchest data */
									inv_enderchest?: {
										type?: number
										/** @description Gzipped byte array of their enderchest inventory NBT data */
										data?: number[]
									}
									/** @description Inventory data */
									inv_contents?: {
										type?: number
										/** @description Gzipped byte array of their inventory NBT data */
										data?: number[]
									}
									/** @description Armor data */
									inv_armor?: {
										type?: number
										/** @description Gzipped byte array of their armor inventory NBT data */
										data?: number[]
									}
									/** @description Item stash data */
									item_stash?: {
										type?: number
										/** @description Gzipped byte array of their stash inventory NBT data */
										data?: number[]
									}
									/** @description Mystic well item data */
									mystic_well_item?: {
										type?: number
										/** @description Gzipped byte array of their mystic well item's NBT data */
										data?: number[]
									}
									/** @description Mystic well pants data */
									mystic_well_pants?: {
										type?: number
										/** @description Gzipped byte array of their mystic well pant's NBT data */
										data?: number[]
									}
									/** @description Death Recaps data */
									death_recaps?: {
										type?: number
										/** @description Gzipped byte array of their death recap book */
										data?: number[]
									}
									/** @description Current Gold */
									cash?: number
									/** @description Seasonal scores for event leaderboards */
									leaderboard_stats?: { [key: string]: unknown }
									genesis_spawn_in_base?: boolean
									/** @description Perk key for their first slot */
									selected_perk_0?: string
									/** @description Perk key for their second slot */
									selected_perk_1?: string
									/** @description Perk key for their third slot */
									selected_perk_2?: string
									/** @description Perk key for their fourth slot */
									selected_perk_3?: string
									last_contract?: number
									/** @description Recently completed contracts */
									ended_contracts?: {
										difficulty?: string
										gold_reward?: number
										requirements?: { [key: string]: unknown }
										progress?: { [key: string]: unknown }
										chunk_of_viles_reward?: number
										completion_date?: number
										remaining_ticks?: number
										key?: string
									}[]
									/** @description Array of recent trades made */
									gold_transactions?: {
										/** @description Amount of gold traded */
										amount?: number
										/** @description Unix timestamp of the trade */
										timestamp?: number
									}[]
									/** @description Current renown */
									renown?: number
									hat_enabled?: boolean
									genesis_points?: number
									drop_confirm_disabled?: boolean
									/** @description Details on each prestige */
									prestiges?: {
										/** @description The prestige they are moving to */
										index?: number
										/** @description Useful for calculating level */
										xp_on_prestige?: number
										/** @description Unix timestamp of the prestige */
										timestamp?: number
									}[]
									zero_point_three_gold_transfer?: boolean
									/** @description Renown shop upgrades */
									renown_unlocks?: {
										/** @description Tier of the unlock indexed from 0 */
										tier?: number
										/** @description Unix timestamp of unlock */
										acquireDate?: number
										/** @description Name of the unlock */
										key?: string
									}[]
									selected_launch_trail?: string
									selected_leaderboard?: string
									last_midfight_disconnect?: number
									/** @description Timestamp of last pledge to a faction */
									genesis_allegiance_time?: number
									genesis_weekly_perks_claim_item_demon?: number
									login_messages?: unknown[]
									/** @description Item ids for perfered slots of items */
									hotbar_favorites?: number[]
									/** @description Timestamp of the last time the player used recon essence */
									reconessence_day?: number
									chat_option_player_chat?: boolean
									chat_option_misc?: boolean
									chat_option_bounties?: boolean
									chat_option_prestige_announcements?: boolean
									chat_option_streaks?: boolean
									chat_option_kill_feed?: boolean
									apollo_enabled?: boolean
									/** @description XP earned before update prestige update */
									zero_point_two_xp?: number
									/** @description Timestamp */
									last_lycanthropy?: number
									recent_kills?: {
										/** @description Victim's uuid */
										victim?: string
										timestamp?: number
									}[]
									xp?: number
									/** @description Array used to contruct their current bounty */
									bounties?: {
										/** @description Amount of gold added this bump */
										amount?: number
										timestamp?: number
										/** @description Usless artifact of borrowed code */
										remainingTicks?: number
										/** @description Usless artifact of borrowed code */
										issuer?: string
									}[]
									night_quests_enabled?: boolean
									/** @description Genesis map faction either "DEMON" or "ANGEL" */
									genesis_allegiance?: string
									/** @description Gold earned during prestige 0 */
									cash_during_prestige_0?: number
									/** @description Gold earned during prestige 1 */
									cash_during_prestige_1?: number
									/** @description Perks / Upgrades unlocked during prestige 0 */
									unlocks?: {
										/** @description Tier of the upgrade indexed from 0 */
										tier?: number
										/** @description Unix timestamp of unlock */
										acquireDate?: number
										/** @description Name of the upgrade */
										key?: string
									}[]
									/** @description Perks / Upgrades unlocked during prestige 1 */
									unlocks_1?: {
										/** @description Tier of the upgrade indexed from 0 */
										tier?: number
										/** @description Unix timestamp of unlock */
										acquireDate?: number
										/** @description Name of the upgrade */
										key?: string
									}[]
								}
								/** @description Unix timestamp of stats being imported if they played before 0.3.5 */
								stats_move_1?: number
								/** @description Timestamp of admin inventory restoration */
								restored_inv_backup_1?: number
								/** @description All common player stats */
								pit_stats_ptl?: {
									/** @description Amount of golden apples eaten */
									gapple_eaten?: number
									/** @description Times the player has opened their enderchest */
									enderchest_opened?: number
									/** @description Times they have cast a fishing rod */
									fishing_rod_launched?: number
									/** @description Amount of blocks placed */
									blocks_placed?: number
									/** @description Lifetime gold earned */
									cash_earned?: number
									/** @description Times the player has been launched by a launcher */
									launched_by_launchers?: number
									/** @description Amount of arrows fired */
									arrows_fired?: number
									/** @description Amount of mystics the player has enchanted to tier two */
									enchanted_tier2?: number
									/** @description Player's playtime in minutes */
									playtime_minutes?: number
									/** @description Amount of mystics the player has enchanted to tier one */
									enchanted_tier1?: number
									/** @description Amount of chat messages sent in the pit */
									chat_messages?: number
									/** @description Bow damage recieved */
									bow_damage_received?: number
									/** @description Amount of mystics the player has enchanted to tier three */
									enchanted_tier3?: number
									/** @description Player's kills */
									kills?: number
									/** @description Amount of diamond items purchased */
									diamond_items_purchased?: number
									/** @description Amount of deaths */
									deaths?: number
									/** @description Amount of soups drank */
									soups_drank?: number
									/** @description Amount of golden heads eaten */
									ghead_eaten?: number
									/** @description Times the player has hit another player with a sword */
									sword_hits?: number
									/** @description Times the player has joined the Pit */
									joins?: number
									/** @description Total damage dealt via bow */
									bow_damage_dealt?: number
									/** @description Amount of contracts initiated */
									contracts_started?: number
									/** @description Total amount of damage received */
									damage_received?: number
									/** @description Amount of the time a player has jumped into mid */
									jumped_into_pit?: number
									/** @description Total damage received via melee */
									melee_damage_received?: number
									/** @description Amount of left clicks performed */
									left_clicks?: number
									/** @description Amount of arrow hits */
									arrow_hits?: number
									/** @description Total damage dealt */
									damage_dealt?: number
									/** @description Amount of assists */
									assists?: number
									/** @description Amount of lava buckets emptied */
									lava_bucket_emptied?: number
									/** @description Highest streak ever reached */
									max_streak?: number
									/** @description Amount of sewer treasures found */
									sewer_treasures_found?: number
									/** @description Amount of night quests completed */
									night_quests_completed?: number
									/** @description Amount of wheat farmed */
									wheat_farmed?: number
									/** @description Amount of dark pants created by the player */
									dark_pants_crated?: number
									/** @description Amount of dark pants enchanted to tier two */
									dark_pants_t2?: number
									/** @description Amount of hidden jewels triggered by the player */
									hidden_jewel_triggers?: number
									/** @description Amount of kings quests completed */
									king_quest_completion?: number
									/** @description Amount of hay bales sold to npcs */
									gold_from_farming?: number
									/** @description Times the player has fished anything not just fish */
									fished_anything?: number
									/** @description Times the player has fished just fish */
									fishes_fished?: number
									/** @description Amount of fish sold to npcs */
									gold_from_selling_fish?: number
								}
							}
							/** @description Player stats in Smash Heroes */
							Smash?: {
								/** @description Current coins in Smash Heroes */
								coins?: number
								/** @description Amount of kills in Smash Heroes */
								kills?: number
								/** @description Amount of deaths in Smash Heroes */
								deaths?: number
								/** @description Player's Smash Level */
								smash_level?: number
								/** @description Current kill/death ratio in Smash Heroes */
								kd?: number
								/** @description Amount of wins in Smash Heroes */
								wins?: number
								/** @description Amount of losses in Smash Heroes */
								losses?: number
								/** @description Number of times the player has left mid-game in Smash Heroes */
								quits?: number
								/** @description Current consecutive wins in Smash Heroes */
								win_streak?: number
								/** @description Current win/loss ratio in Smash Heroes */
								wl?: number
								/** @description Total number of Smash Heroes games played */
								games_played?: number
								/** @description Current weekly kills in Smash Heroes */
								weekly_kills?: number
								/** @description Current weekly wins in Smash Heroes */
								weekly_wins?: number
								/** @description Current weekly losses in Smash Heroes */
								weekly_losses?: number
								/** @description Smash Heroes games played this week */
								weekly_games_played?: number
								/** @description Current monthly kills in Smash Heroes */
								monthly_kills?: number
								/** @description Current monthly wins in Smash Heroes */
								monthly_wins?: number
								/** @description Current monthly losses in Smash Heroes */
								monthly_losses?: number
								/** @description Smash Heroes games played this month */
								monthly_games_played?: number
							}
							/** @description Player stats in SkyWars */
							SkyWars?: {
								/** @description Current coins in SkyWars */
								coins?: number
								/** @description Total wins in SkyWars */
								wins?: number
								/** @description Total losses in SkyWars */
								losses?: number
								/** @description Current win/loss ratio in SkyWars */
								win_loss_ratio?: number
								/** @description Current experience in SkyWars */
								skywars_experience?: number
								/** @description Current level in SkyWars */
								level?: number
								/** @description Current kills in SkyWars */
								kills?: number
								/** @description Current deaths in SkyWars */
								deaths?: number
								/** @description Current assists in SkyWars */
								assists?: number
								/** @description Current kill/death ratio in SkyWars */
								kill_death_ratio?: number
								/** @description Total souls gathered in SkyWars */
								souls_gathered?: number
								/** @description Current souls in the soul well in SkyWars */
								souls?: number
								/** @description Total arrows shot in SkyWars */
								arrows_shot?: number
								/** @description Total arrows hit in SkyWars */
								arrows_hit?: number
								/** @description Current arrow hit/miss ratio in SkyWars */
								arrow_hit_miss_ratio?: number
								/** @description Total eggs thrown in SkyWars */
								eggs_thrown?: number
								/** @description Total enderpearls thrown in SkyWars */
								enderpearls_thrown?: number
								/** @description Totla blocks placed in SkyWars */
								blocks_placed?: number
								/** @description Current blocks broken in SkyWars */
								blocks_broken?: number
								/** @description Current soul well uses in SkyWars */
								soul_well_uses?: number
								/** @description Number of rares a player has gotten from the soul well in SkyWars */
								soul_well_rares?: number
								/** @description Number of legendaries a player has gotten from the soul well in SkyWars */
								soul_well_legendaries?: number
							}
							/** @description Player stats in the TNT Games */
							TNT?: {
								/** @description Current coins in the TNT Games */
								coins?: number
								/** @description Stats for specific gamemodes in the TNT Games */
								gamemodes?: {
									/** @description Stats for TNT Run */
									tnt_run?: {
										/** @description Total wins in TNT Run */
										wins?: number
										/** @description Total losses in TNT Run */
										losses?: number
										/** @description The players win/loss ratio in TNT Run */
										win_loss_ratio?: number
										/** @description The players record for longest time survived in TNT Run in seconds */
										record_time_survived?: number
									}
									/** @description Stats for PVP Run */
									pvp_run?: {
										/** @description Total wins in PvP Run */
										wins?: number
										/** @description Total losses in PvP Run */
										losses?: number
										/** @description The players win/loss ratio in PvP Run */
										win_loss_ratio?: number
										/** @description Total kills in PvP Runs */
										kills?: number
										/** @description The players record for longest time survived in PvP Run in seconds */
										record_time_survived?: number
									}
									/** @description Stats for TNT Tag */
									tnt_tag?: {
										/** @description Total kills in TNT Tag */
										kills?: number
										/** @description Total wins in TNT Tag */
										wins?: number
									}
									/** @description Stats for Bowspleef */
									bow_spleef?: {
										/** @description Total wins in Bowspleef */
										wins?: number
										/** @description Total losses in Bowspleef */
										losses?: number
										/** @description The players win/loss ratio in Bowspleef */
										win_loss_ratio?: number
									}
									/** @description Stats for Wizards */
									wizards?: {
										/** @description Total wins in Wizards */
										wins?: number
										/** @description Total kills in Wizards */
										kills?: number
										/** @description Total deaths in Wizards */
										deaths?: number
										/** @description Total assists in Wizards */
										assists?: number
										/** @description The players kill/death ratio in Wizards */
										kill_death_ratio?: number
									}
								}
							}
							/** @description Player stats in Mega Walls */
							MegaWalls?: {
								/** @description Current coins in Mega Walls */
								coins?: number
								/** @description Current kills in Mega Walls */
								kills?: number
								/** @description Current assists in Mega Walls */
								assists?: number
								/** @description Current deaths in Mega Walls */
								deaths?: number
								/** @description Current kill/death ratio in Mega Walls */
								kill_death_ratio?: number
								/** @description Current final kills in Mega Walls */
								final_kills?: number
								/** @description Current final assists in Mega Walls */
								final_assists?: number
								/** @description Current final deaths in Mega Walls */
								final_deaths?: number
								/** @description Current final kill/death ratio in Mega Walls */
								final_kill_death_ratio?: number
								/** @description Current wins in Mega Walls */
								wins?: number
								/** @description Current losses in Mega Walls */
								losses?: number
								/** @description Current win/loss ratio in Mega Walls */
								win_loss_ratio?: number
								/** @description The amount of damage the player has done to Withers in Mega Walls */
								wither_damage?: number
								/** @description The number of kills the player has gotten while defending their wither in Mega Walls */
								defending_kills?: number
							}
						}
					}
				}
			}
		}
	}
	/** Returns player achievement stats */
	getPlayerAchievements: {
		parameters: {
			path: {
				/** Username or non-dashed UUID of player. UUID should be used when feasible for better performance. */
				playerName: string
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						/** @description Total achievement points */
						achievement_points?: number
						/** @description Total legacy achievement points */
						legacy_achievement_points?: number
						/** @description Total tiered achievements completed */
						completed_tiered?: number
						/** @description Total one time achievements completed */
						completed_one_time?: number
						/** @description Total achievements completed */
						completed_total?: number
						rewards?: {
							/** @description Timestamp of reward goal claimed */
							'200'?: number
						}
						games?: {
							one_time?: string[]
							legacy?: string[]
							tiered?: { [key: string]: unknown }
							/** @description Total achievements completed in the game */
							completed?: number
							/** @description Total tiered achievements completed in the game. Each tier counts as a completion */
							completed_tiered?: number
							/** @description Total one time achievements completed in the game */
							completed_one_time?: number
							/** @description Total achievement points in the game */
							points?: number
							/** @description Total achievement points from tiered achievements in the game */
							points_tiered?: number
							/** @description Total achievement points from one time achievements in the game */
							points_one_time?: number
							/** @description Total achievement points from legacy achievements in the game */
							points_legacy?: number
						}
					}
				}
			}
		}
	}
	/** Returns player quest completions */
	getPlayerQuests: {
		parameters: {
			path: {
				/** Username or non-dashed UUID of player. UUID should be used when feasible for better performance. */
				playerName: string
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						/** @description Total quests completed */
						quests_completed?: number
						/** @description Total challenges completed */
						challenges_completed?: number
						completions?: {
							game?: number[]
						}
					}
				}
			}
		}
	}
	/** Returns up to 100 most recent games played by player. Games are stored for 3 days and may be hidden by the player. */
	getPlayerRecentGames: {
		parameters: {
			path: {
				/** Username or non-dashed UUID of player. UUID should be used when feasible for better performance. */
				playerName: string
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						date?: number
						gameType?: string
						mode?: string
						map?: string
					}[]
				}
			}
		}
	}
	/** Returns the current online status and game for a player. */
	getPlayerStatus: {
		parameters: {
			path: {
				/** Username or non-dashed UUID of player. UUID should be used when feasible for better performance. */
				playerName: string
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						online?: boolean
						game?: {
							type?: string
							mode?: string
							map?: string
						}
					}
				}
			}
		}
	}
	/** Look up a guild from the name of one of it's members */
	getGuildFromPlayer: {
		parameters: {
			path: {
				/** Username or non-dashed UUID of player. UUID should be used when feasible for better performance. */
				playerName: string
			}
			query: {
				/** Replace uuid fields with player profiles */
				populatePlayers?: string
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						/** @description Value indicating the success, or not, of the operation. Can be either true or null */
						guild?: boolean
						/** @description Guild's name */
						name?: string
						/** @description Guild id used in hypixel backend */
						id?: string
						/** @description Guild creation date */
						created?: string
						/** @description Guild tag */
						tag?: string
						/** @description Formatting code for the guild tag */
						tag_color?: string
						/** @description Formatted tag string e.g. '&b[TAG]' */
						tag_formatted?: string
						/** @description Ranking in the number of guild coins owned in the legacy guild system */
						legacy_ranking?: number
						/** @description Total guild xp */
						exp?: number
						/** @description Guild level */
						level?: number
						/** @description Guild EXP earned in each minigame */
						exp_by_game?: number
						/** @description Contains raw guild xp earned in the past week. Uses format YYYY-MM-DD. */
						exp_history?: { [key: string]: unknown }
						/** @description Guild description */
						description?: string
						/** @description Member object of the guild master */
						guild_master?: {
							/** @description Player UUID */
							uuid?: string
							/** @description Player rank in the guild */
							rank?: string
							/** @description Member join date */
							joined?: number
							/** @description How many much the member has contributed to guild quests */
							quest_participation?: number
							/** @description Contains raw guild xp earned in the past week. Uses format YYYY-MM-DD. */
							exp_history?: { [key: string]: unknown }
							/** @description Date the member is muted until */
							muted_till?: number
						}
						/** @description Array containing the guild's preferred games */
						preferred_games?: string[]
						ranks?: {
							name?: string
							permissions?: number[]
							default?: boolean
							tag?: string
							created?: number
							priority?: number
						}[]
						/** @description Array of players on the guild */
						members?: {
							/** @description Player UUID */
							uuid?: string
							/** @description Player rank in the guild */
							rank?: string
							/** @description Member join date */
							joined?: number
							/** @description How many much the member has contributed to guild quests */
							quest_participation?: number
							/** @description Contains raw guild xp earned in the past week. Uses format YYYY-MM-DD. */
							exp_history?: { [key: string]: unknown }
							/** @description Date the member is muted until */
							muted_till?: number
						}[]
					}
				}
			}
		}
	}
	/** Look up a guild from the its name */
	getGuildFromName: {
		parameters: {
			path: {
				/** Name of guild. */
				guildName: string
			}
			query: {
				/** Replace uuid fields with player profiles */
				populatePlayers?: string
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						/** @description Value indicating the success, or not, of the operation. Can be either true or null */
						guild?: boolean
						/** @description Guild's name */
						name?: string
						/** @description Guild id used in hypixel backend */
						id?: string
						/** @description Guild creation date */
						created?: string
						/** @description Guild tag */
						tag?: string
						/** @description Formatting code for the guild tag */
						tag_color?: string
						/** @description Formatted tag string e.g. '&b[TAG]' */
						tag_formatted?: string
						/** @description Ranking in the number of guild coins owned in the legacy guild system */
						legacy_ranking?: number
						/** @description Total guild xp */
						exp?: number
						/** @description Guild level */
						level?: number
						/** @description Guild EXP earned in each minigame */
						exp_by_game?: number
						/** @description Contains raw guild xp earned in the past week. Uses format YYYY-MM-DD. */
						exp_history?: { [key: string]: unknown }
						/** @description Guild description */
						description?: string
						/** @description Member object of the guild master */
						guild_master?: {
							/** @description Player UUID */
							uuid?: string
							/** @description Player rank in the guild */
							rank?: string
							/** @description Member join date */
							joined?: number
							/** @description How many much the member has contributed to guild quests */
							quest_participation?: number
							/** @description Contains raw guild xp earned in the past week. Uses format YYYY-MM-DD. */
							exp_history?: { [key: string]: unknown }
							/** @description Date the member is muted until */
							muted_till?: number
						}
						/** @description Array containing the guild's preferred games */
						preferred_games?: string[]
						ranks?: {
							name?: string
							permissions?: number[]
							default?: boolean
							tag?: string
							created?: number
							priority?: number
						}[]
						/** @description Array of players in the guild */
						members?: {
							/** @description Player UUID */
							uuid?: string
							/** @description Player rank in the guild */
							rank?: string
							/** @description Member join date */
							joined?: number
							/** @description How many much the member has contributed to guild quests */
							quest_participation?: number
							/** @description Contains raw guild xp earned in the past week. Uses format YYYY-MM-DD. */
							exp_history?: { [key: string]: unknown }
							/** @description Date the member is muted until */
							muted_till?: number
						}[]
					}
				}
			}
		}
	}
	/** Look up a guild from the its ID */
	guild: {
		parameters: {
			path: {
				/** ID of guild. */
				guildID: string
			}
			query: {
				/** Replace uuid fields with player profiles */
				populatePlayers?: string
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						/** @description Value indicating the success, or not, of the operation. Can be either true or null */
						guild?: boolean
						/** @description Guild's name */
						name?: string
						/** @description Guild id used in hypixel backend */
						id?: string
						/** @description Guild creation date */
						created?: string
						/** @description Guild tag */
						tag?: string
						/** @description Formatting code for the guild tag */
						tag_color?: string
						/** @description Formatted tag string e.g. '&b[TAG]' */
						tag_formatted?: string
						/** @description Ranking in the number of guild coins owned in the legacy guild system */
						legacy_ranking?: number
						/** @description Total guild xp */
						exp?: number
						/** @description Guild level */
						level?: number
						/** @description Guild EXP earned in each minigame */
						exp_by_game?: number
						/** @description Contains raw guild xp earned in the past week. Uses format YYYY-MM-DD. */
						exp_history?: { [key: string]: unknown }
						/** @description Guild description */
						description?: string
						/** @description Member object of the guild master */
						guild_master?: {
							/** @description Player UUID */
							uuid?: string
							/** @description Player rank in the guild */
							rank?: string
							/** @description Member join date */
							joined?: number
							/** @description How many much the member has contributed to guild quests */
							quest_participation?: number
							/** @description Contains raw guild xp earned in the past week. Uses format YYYY-MM-DD. */
							exp_history?: { [key: string]: unknown }
							/** @description Date the member is muted until */
							muted_till?: number
						}
						/** @description Array containing the guild's preferred games */
						preferred_games?: string[]
						ranks?: {
							name?: string
							permissions?: number[]
							default?: boolean
							tag?: string
							created?: number
							priority?: number
						}[]
						/** @description Array playerof players on the guild */
						members?: {
							/** @description Player UUID */
							uuid?: string
							/** @description Player rank in the guild */
							rank?: string
							/** @description Member join date */
							joined?: number
							/** @description How many much the member has contributed to guild quests */
							quest_participation?: number
							/** @description Contains raw guild xp earned in the past week. Uses format YYYY-MM-DD. */
							exp_history?: { [key: string]: unknown }
							/** @description Date the member is muted until */
							muted_till?: number
						}[]
					}
				}
			}
		}
	}
	/** Gets all skyblock profiles for the specified player */
	getSkyblockProfiles: {
		parameters: {
			path: {
				/** Username or non-dashed UUID of player. UUID should be used when feasible for better performance. */
				playerName: string
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						PROFILE_ID?: {
							profile_id?: string
							/** @description Profile name, e.g. Strawberry */
							cute_name?: string
							first_join?: number
							last_save?: number
							collections_unlocked?: number
							members?: unknown[]
						}
					}
				}
			}
		}
	}
	/** If no profile is specified, the last played profile is returned */
	getSkyblockPlayerProfile: {
		parameters: {
			path: {
				/** Username or non-dashed UUID of player. UUID should be used when feasible for better performance. */
				playerName: string
				/** SkyBlock profile id e.g. '498228a732d443589aabd1e97e6806cd' or profile name e.g. 'Mango'. Note: profile name can be different (although unlikely) for different members of a co-op! */
				profileId?: string
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						members?: {
							uuid?: {
								uuid?: string
								attributes?: {
									damage?: number
									health?: number
									defense?: number
									effective_health?: number
									strength?: number
									damage_increase?: number
									speed?: number
									crit_chance?: number
									crit_damage?: number
									bonus_attack_speed?: number
									intelligence?: number
									sea_creature_chance?: number
									magic_find?: number
									pet_luck?: number
								}
								first_join_hub?: number
								objectives?: {
									objective?: {
										status?: string
										progress?: number
										completed_at?: number
									}
								}
								tutorial?: [string]
								quests?: {
									quest?: {
										status?: string
										activated_at?: number
										activated_at_sb?: number
										completed_at?: number
										completed_at_sb?: number
									}
								}
								last_death?: number
								visited_zones?: [string]
								fishing_treasure_caught?: number
								death_count?: number
								achievement_spawned_island_types?: [string]
								wardrobe_equipped_slot?: number
								sacks_counts?: {
									ITEM_ID?: number
								}
								stats?: {
									total_kills?: number
									total_deaths?: number
									kills?: {
										name?: number
									}
									total_dragon_kills?: number
									deaths?: {
										name?: number
									}
									highest_critical_damage?: number
									ender_crystals_destroyed?: number
									end_race_best_time?: number
									chicken_race_best_time?: number
									dungeon_hub_best_time?: {
										type?: number
									}
									gifts_given?: number
									gifts_received?: number
									items_fished?: {
										total?: number
										normal?: number
										treasure?: number
										large_treasure?: number
									}
									auctions?: {
										created?: number
										completed?: number
										no_bids?: number
										won?: number
										bids?: number
										highest_bid?: number
										total_fees?: number
										gold_earned?: number
										gold_spent?: number
										sold?: {
											rare?: number
											epic?: number
											uncommon?: number
											legendary?: number
											common?: number
										}
										bought?: {
											rare?: number
											uncommon?: number
											epic?: number
											legendary?: number
											common?: number
										}
									}
									winter_records?: {
										snowballs_hit?: number
										damage?: number
										magma_cube_damage?: number
										cannonballs_hit?: number
									}
									pet_milestones?: {
										ore_mined?: number
										sea_creatures_killed?: number
									}
								}
								/** @description Array of item objects. Empty slots are empty objects. */
								inventory?: {
									active?: boolean
									name?: string
									rarity?: string
									type?: string
									stats?: {
										stat?: number
									}
									/** @description Item's minecraft damage value */
									damage?: number
									lore?: string[]
									attributes?: {
										/** @description E.g. Spicy */
										modifier?: string
										enchantments?: {
											enchantment?: number
										}
										anvil_uses?: number
										hot_potato_count?: number
										origin?: string
										/** @description Item's Hypixel ID */
										id?: string
										uuid?: string
										timestamp?: number
									}
									/** @description Item's minecraft id */
									item_id?: string
									count?: number
								}[]
								/** @description Array of item objects. Empty slots are empty objects. */
								armor?: {
									active?: boolean
									name?: string
									rarity?: string
									type?: string
									stats?: {
										stat?: number
									}
									/** @description Item's minecraft damage value */
									damage?: number
									lore?: string[]
									attributes?: {
										/** @description E.g. Spicy */
										modifier?: string
										enchantments?: {
											enchantment?: number
										}
										anvil_uses?: number
										hot_potato_count?: number
										origin?: string
										/** @description Item's Hypixel ID */
										id?: string
										uuid?: string
										timestamp?: number
									}
									/** @description Item's minecraft id */
									item_id?: string
									count?: number
								}[]
								/** @description Array of item objects. Empty slots are empty objects. */
								talisman_bag?: {
									active?: boolean
									name?: string
									rarity?: string
									type?: string
									stats?: {
										stat?: number
									}
									/** @description Item's minecraft damage value */
									damage?: number
									lore?: string[]
									attributes?: {
										/** @description E.g. Spicy */
										modifier?: string
										enchantments?: {
											enchantment?: number
										}
										anvil_uses?: number
										hot_potato_count?: number
										origin?: string
										/** @description Item's Hypixel ID */
										id?: string
										uuid?: string
										timestamp?: number
									}
									/** @description Item's minecraft id */
									item_id?: string
									count?: number
								}[]
								/** @description Array of item objects. Empty slots are empty objects. */
								fishing_bag?: {
									active?: boolean
									name?: string
									rarity?: string
									type?: string
									stats?: {
										stat?: number
									}
									/** @description Item's minecraft damage value */
									damage?: number
									lore?: string[]
									attributes?: {
										/** @description E.g. Spicy */
										modifier?: string
										enchantments?: {
											enchantment?: number
										}
										anvil_uses?: number
										hot_potato_count?: number
										origin?: string
										/** @description Item's Hypixel ID */
										id?: string
										uuid?: string
										timestamp?: number
									}
									/** @description Item's minecraft id */
									item_id?: string
									count?: number
								}[]
								/** @description Array of item objects. Empty slots are empty objects. */
								potion_bag?: {
									active?: boolean
									name?: string
									rarity?: string
									type?: string
									stats?: {
										stat?: number
									}
									/** @description Item's minecraft damage value */
									damage?: number
									lore?: string[]
									attributes?: {
										/** @description E.g. Spicy */
										modifier?: string
										enchantments?: {
											enchantment?: number
										}
										anvil_uses?: number
										hot_potato_count?: number
										origin?: string
										/** @description Item's Hypixel ID */
										id?: string
										uuid?: string
										timestamp?: number
									}
									/** @description Item's minecraft id */
									item_id?: string
									count?: number
								}[]
								/** @description Array of item objects. Empty slots are empty objects. */
								ender_chest?: {
									active?: boolean
									name?: string
									rarity?: string
									type?: string
									stats?: {
										stat?: number
									}
									/** @description Item's minecraft damage value */
									damage?: number
									lore?: string[]
									attributes?: {
										/** @description E.g. Spicy */
										modifier?: string
										enchantments?: {
											enchantment?: number
										}
										anvil_uses?: number
										hot_potato_count?: number
										origin?: string
										/** @description Item's Hypixel ID */
										id?: string
										uuid?: string
										timestamp?: number
									}
									/** @description Item's minecraft id */
									item_id?: string
									count?: number
								}[]
								/** @description Array of item objects. Empty slots are empty objects. */
								candy_bag?: {
									active?: boolean
									name?: string
									rarity?: string
									type?: string
									stats?: {
										stat?: number
									}
									/** @description Item's minecraft damage value */
									damage?: number
									lore?: string[]
									attributes?: {
										/** @description E.g. Spicy */
										modifier?: string
										enchantments?: {
											enchantment?: number
										}
										anvil_uses?: number
										hot_potato_count?: number
										origin?: string
										/** @description Item's Hypixel ID */
										id?: string
										uuid?: string
										timestamp?: number
									}
									/** @description Item's minecraft id */
									item_id?: string
									count?: number
								}[]
								/** @description Array of item objects. Empty slots are empty objects. */
								wardrobe?: {
									active?: boolean
									name?: string
									rarity?: string
									type?: string
									stats?: {
										stat?: number
									}
									/** @description Item's minecraft damage value */
									damage?: number
									lore?: string[]
									attributes?: {
										/** @description E.g. Spicy */
										modifier?: string
										enchantments?: {
											enchantment?: number
										}
										anvil_uses?: number
										hot_potato_count?: number
										origin?: string
										/** @description Item's Hypixel ID */
										id?: string
										uuid?: string
										timestamp?: number
									}
									/** @description Item's minecraft id */
									item_id?: string
									count?: number
								}[]
								last_save?: number
								first_join?: number
								coin_purse?: number
								fairy_souls_collected?: number
								fairy_souls?: number
								fairy_exchanges?: number
								pets?: [
									{
										type?: string
										exp?: number
										active?: boolean
										tier?: string
										heldItem?: unknown
										candyUsed?: number
									}
								]
								skills?: {
									skill?: {
										xp?: number
										level?: number
										floatLevel?: number
										maxLevel?: number
										xpCurrent?: number
										xpForNext?: number
										progress?: number
									}
								}
								average_skill_level?: number
								collection?: {
									ITEM_ID?: number
								}
								collection_tiers?: {
									ITEM_ID?: number
								}
								collections_unlocked?: number
								minions?: {
									TYPE?: number
								}
								slayer?: {
									type?: {
										claimed_levels?: number
										xp?: number
										xp_for_next?: number
										kills_tier?: {
											'1'?: number
											'2'?: number
											'3'?: number
											'4'?: number
											'5'?: number
										}
									}
								}
								pet_score?: number
								bonuses?: [
									{
										type?: string
										bonus?: { [key: string]: unknown }
									}
								]
								player?: {
									uuid?: string
									username?: string
									first_login?: number
									last_login?: number
									level?: number
									achievement_points?: number
									karma?: number
									rank_formatted?: string
								}
							}
						}
						banking?: {
							balance?: number
							transactions?: [
								{
									amount?: number
									timestamp?: number
									action?: string
									initiator_name?: string
								}
							]
						}
						unlocked_minions?: {
							MINION_TYPE?: number
						}
						cute_name?: string
					}
				}
			}
		}
	}
	/** Allows you to query active auctions and filter the results based on things such as item ID, rarity, bin or category. */
	getSkyblockAuctions: {
		parameters: {
			query: {
				/** Limit number of records returned. Largest allowed value is 1000. */
				limit?: number
				/** Pages allow you to split the data using the `limit` param. For example, if there are 23 auctions matching your query and you set the limit to 10, each page will return up to the next 10 consecutive results. With 23 results, you would expect pages 0 and 1 to each have 20 results and page 2 to have the remaining 3. */
				page?: number
				/** Auction uuid, e.g. "7314f4f14c324342933e6c8c46a600be" */
				auctionUUID?: string
				/** Define sort order. `asc` for ascending or `desc` for descending */
				sortOrder?: 'desc' | 'asc'
				/** Which field to sort records by. Choosing to sort by a custom field may lead to slow queries. */
				sortBy?: string
				/** Item id, e.g. NEW_YEAR_CAKE. All available item ids can be found on the [items endpoint](https://api.slothpixel.me/api/skyblock/items). */
				id?: string
				/** When `true`, returns only bin auctions and when `false`, returns only normal auctions. Both types are returned if the parameter is not specified. */
				bin?: boolean
				/** Filter by item rarity */
				rarity?:
					| 'COMMON'
					| 'UNCOMMON'
					| 'RARE'
					| 'EPIC'
					| 'LEGENDARY'
					| 'MYTHIC'
					| 'DIVINE'
					| 'SUPREME'
					| 'SPECIAL'
					| 'VERY_SPECIAL'
				/** Filter by item category */
				category?: 'accessories' | 'armor' | 'blocks' | 'consumables' | 'misc' | 'weapon'
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						last_updated?: number
						total_auctions?: number
						matching_query?: number
						auctions?: {
							/** @description Auction uuid */
							uuid?: string
							/** @description UNIX timestamp of auction start date */
							start?: number
							/** @description UNIX timestamp of auction end date */
							end?: number
							/** @description Item rarity, e.g. "RARE" */
							tier?: string
							/** @description Item category, e.g. "misc" */
							category?: string
							item?: {
								/** @description Item's minecraft id */
								item_id?: number
								/** @description Item name with formatting */
								name?: string
								/** @description Array of strings containing item's lore with formatting */
								lore?: string[]
								/** @description How many items are for sale in the auction */
								count?: number
								/** @description Damage value of the item. */
								damage?: number
								attributes?: {
									/** @description Item modifier e.g. "spicy" */
									modifier?: string
									/** @description Object containing item's enchantments in type:level format e.g. sharpness: 5. */
									enchantments?: { [key: string]: unknown }
									/** @description Item's origin, for example "CRAFTING_GRID" */
									origin?: string
									/** @description Item id, e.g. "ASPECT_OF_THE_END" */
									id?: string
									/** @description Item's unique uuid if it has one. Can be used to track previous auctions of the same item */
									uuid?: string
									/** @description If the item is a minecraft skull, i.e. a talisman, this property contains the texture id. Textures can be found at http://textures.minecraft.net/texture/{id} */
									texture?: string
									/** @description Creation date */
									timestamp?: number
								}
							}
							starting_bid?: number
							highest_bid_amount?: number
							/** @description All current bids */
							bids?: {
								/** @description Bidder's uuid */
								bidder?: string
								/** @description Bidder's skyblock profile id */
								profile_id?: string
								/** @description Bidded coins */
								amount?: number
								/** @description Bid UNIX timestamp */
								timestamp?: number
							}[]
						}[]
					}
				}
			}
		}
	}
	/** Returns all SkyBlock items */
	getSkyblockItems: {
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						ITEM_ID?: {
							name?: string
							/** @description Item rarity, e.g. "RARE" */
							tier?: string
							/** @description Item category, e.g. "misc" */
							category?: string
							/** @description Item's minecraft id */
							item_id?: number
							/** @description Damage value of the item. */
							damage?: number
							/** @description If the item is a minecraft skull, i.e. a talisman, this property contains the texture id. Textures can be found at http://textures.minecraft.net/texture/{id} */
							texture?: string
							/** @description Set to true if the item can be found in the bazaar */
							bazaar?: boolean
						}
					}
				}
			}
		}
	}
	/** Returns SkyBlock events. Use key for the events parameter in /calendar/events endpoint */
	getSkyblockEvents: {
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						/** @description The cleaner name of the event. Use key for the events parameter in /calendar/events endpoint */
						EVENT_ENUM?: string
					}
				}
			}
		}
	}
	/** Returns information about the SkyBlock calendar */
	getSkyblockCalendar: {
		parameters: {
			query: {
				/** The specific events you want to view the times. If left blank, will return all events. Multiple events separated by commas. */
				events?: string
				/** Date from which to get events. Uses a Unix timestamp with milliseconds or a [custom date string](https://github.com/slothpixel/core/wiki/Using-custom-date-parameters). E.g. to get past 24 hours, use `now-1d`. */
				from?: string
				/** Date to get calendar events until to. Uses a Unix timestamp with milliseconds or a [custom date string](https://github.com/slothpixel/core/wiki/Using-custom-date-parameters). E.g. to reference the date 3 hours ago, use `now-3h`. */
				to?: string
				/** The amount of Skyblock years to query. */
				years?: number
				/** Whether to stop the data at the year end. If true, will only show data until the end of the current Skyblock year, otherwise will return the full year starting from the 'from' timestamp, possibly including part of the next year. */
				stopatyearend?: boolean
			}
		}
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						/** @description The timestamp of the 'from' parameter */
						from?: number
						/** @description The timestamp of the 'to' parameter */
						to?: number
						/** @description The date based on 'from' parameter, e.g Early Winter 14th */
						date?: string
						/** @description The current day based on 'from' parameter */
						day?: number
						/** @description The current month based on 'from' parameter */
						month?: string
						/** @description The current year based on 'from' parameter */
						year?: number
						/** @description The current time based on 'from' parameter */
						time?: string
						/** @description The current minute based on 'from' parameter */
						minute?: number
						/** @description The current hour based on 'from' parameter */
						hour?: number
						/** @description The time until the next day based on 'from' parameter */
						next_day_countdown?: number
						/** @description The time until the next month based on 'from' parameter */
						next_month_countdown?: number
						/** @description The time until the next year based on 'from' parameter */
						next_year_countdown?: number
						events?: {
							EVENT_ENUM?: {
								/** @description The cleaner name of the event */
								name?: string
								/** @description The time the event is active */
								duration?: number
								events?: {
									/** @description The starting timestamp of the event */
									start_timestamp?: number
									/** @description The ending timestamp of the event */
									end_timestamp?: number
									/** @description The time until the event starts */
									starting_in?: number
									/** @description The time until the event ends */
									ending_in?: number
									/** @description The type of pet if the event is a Traveling Zoo */
									pet?: string
								}[]
							}
						}
					}
				}
			}
		}
	}
	/** Returns a list of boosters for all server gamemodes */
	getBoosters: {
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						game?: {
							/** @description UUID of booster owner */
							uuid?: string
							/** @description Booster coin multiplier */
							multiplier?: number
							/** @description UNIX timestamp of activation date */
							activated?: number
							/** @description Original duration in seconds */
							originalLength?: number
							/** @description Current length in seconds */
							length?: number
							/** @description Whether the booster is currently active */
							active?: boolean
							/** @description Array of players that have stacked a booster on the same slot */
							stacked?: string[]
						}[]
					}
				}
			}
		}
	}
	/** Returns information about the number of staff and watchdog server bans */
	getBans: {
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': {
						watchdog?: {
							/** @description Watchdog's bans in the last minute */
							last_minute?: number
							/** @description Watchdog bans in the last day */
							daily?: number
							/** @description Total Watchdog bans, ever */
							total?: number
						}
						staff?: {
							/** @description Staff bans in the last day */
							daily?: number
							/** @description Total staff bans, ever */
							total?: number
						}
					}
				}
			}
		}
	}
	/** Returns information about player counts in each game */
	getCounts: {
		responses: {
			/** successful operation */
			200: {
				content: {
					'application/json': { [key: string]: unknown }
				}
			}
		}
	}
}

export interface external {}
